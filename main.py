jimport telebot
import openai
import os

# === üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = telebot.TeleBot(8345133648:AAHEH-H4mcBkXd8TTUQnh-dbFbtbeQATZOk)
openai.api_key = OPENAI_API_KEYsk-proj-li8P2_Y1MWOuUAH_r4IynIgHFFbdRYgf6BKGqvwzoL1-dDRVTIyWyfexbXn79NHPpaywrSvoWeT3BlbkFJQ3UZksccuSyO8A-mb3W6j-Bgi8xfKALI1l3dCMKNBWYkK7TYnWMdEmrh4hmSNb4-vc4uSjRIcA

# === üåç –Ø–∑—ã–∫–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ===
LANG = {}  # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# === üí¨ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
MAIN_MENU_RU = (
    "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n"
    "1Ô∏è‚É£ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç\n"
    "2Ô∏è‚É£ –ü—Ä–∏–¥—É–º–∞—Ç—å –∏–¥–µ—é\n"
    "3Ô∏è‚É£ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
    "4Ô∏è‚É£ –£–ª—É—á—à–∏—Ç—å —Ç–µ–∫—Å—Ç\n"
    "5Ô∏è‚É£ –û–±—É—á–µ–Ω–∏–µ ChatGPT\n\n"
    "üåê –î–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –Ω–∞–ø–∏—à–∏ /lang"
)
MAIN_MENU_EN = (
    "üìã Main menu:\n"
    "1Ô∏è‚É£ Create post\n"
    "2Ô∏è‚É£ Business idea\n"
    "3Ô∏è‚É£ Commercial offer\n"
    "4Ô∏è‚É£ Improve text\n"
    "5Ô∏è‚É£ ChatGPT training\n\n"
    "üåê Type /lang to switch language"
)

# === ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–º—Ç—ã –¥–ª—è BizBot ===
SYSTEM_PROMPT_RU = "–¢—ã ‚Äî BizBot, —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ü–∏—à–∏ –∫—Ä–∞—Ç–∫–æ, –ø–æ –¥–µ–ª—É –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ. –ü–æ–º–æ–≥–∞–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º —Å –∏–¥–µ—è–º–∏, —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º."
SYSTEM_PROMPT_EN = "You are BizBot, an intelligent AI assistant for entrepreneurs. Write clearly, concisely, and in a friendly tone. Help users with ideas, content, and marketing texts."

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=["start"])
def start_message(message):
    LANG[message.chat.id] = "ru"
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø BizBot ‚Äî —Ç–≤–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.\n"
        "I can also work in English.\n\n"
        + MAIN_MENU_RU,
    )

# === –ö–æ–º–∞–Ω–¥–∞ /lang ===
@bot.message_handler(commands=["lang"])
def change_language(message):
    if LANG.get(message.chat.id) == "ru":
        LANG[message.chat.id] = "en"
        bot.send_message(message.chat.id, "‚úÖ Language switched to English.\n\n" + MAIN_MENU_EN)
    else:
        LANG[message.chat.id] = "ru"
        bot.send_message(message.chat.id, "‚úÖ –Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.\n\n" + MAIN_MENU_RU)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(func=lambda msg: True)
def handle_message(message):
    lang = LANG.get(message.chat.id, "ru")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–¥–∞—á—É –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text = message.text.lower()
    if lang == "ru":
        if "1" in text or "–ø–æ—Å—Ç" in text:
            task = "–°–æ–∑–¥–∞–π –ø—Ä–æ–¥–∞—é—â–∏–π –ø–æ—Å—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞: "
        elif "2" in text or "–∏–¥–µ" in text:
            task = "–ü—Ä–∏–¥—É–º–∞–π –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω—É—é –∏–¥–µ—é: "
        elif "3" in text or "–∫–æ–º–º–µ—Ä" in text:
            task = "–°–¥–µ–ª–∞–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞: "
        elif "4" in text or "—É–ª—É—á" in text:
            task = "–£–ª—É—á—à–∏—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –æ–Ω –∑–≤—É—á–∞–ª –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –ø—Ä–æ–¥–∞—é—â–µ: "
        elif "5" in text or "–æ–±—É—á" in text:
            bot.reply_to(message, "üéì –£—Ä–æ–∫ 1. –ß—Ç–æ —Ç–∞–∫–æ–µ ChatGPT –∏ –∫–∞–∫ –æ–Ω –ø–æ–º–æ–≥–∞–µ—Ç –±–∏–∑–Ω–µ—Å—É...\n(—Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç)")
            return
        else:
            bot.reply_to(message, MAIN_MENU_RU)
            return
        prompt = SYSTEM_PROMPT_RU
    else:
        if "1" in text or "post" in text:
            task = "Write a marketing post for business: "
        elif "2" in text or "idea" in text:
            task = "Suggest a business or advertising idea: "
        elif "3" in text or "offer" in text:
            task = "Write a commercial offer for a client: "
        elif "4" in text or "improve" in text:
            task = "Improve this text to sound professional and persuasive: "
        elif "5" in text or "train" in text:
            bot.reply_to(message, "üéì Lesson 1. What is ChatGPT and how it helps business...\n(you can add your own text here)")
            return
        else:
            bot.reply_to(message, MAIN_MENU_EN)
            return
        prompt = SYSTEM_PROMPT_EN

    user_input = message.text
    bot.send_chat_action(message.chat.id, "typing")

    # === GPT-–æ—Ç–≤–µ—Ç ===
    try:
        completion = openai.ChatCompletion.create(
            model="gpt-4-turbo",
            messages=[
                {"role": "system", "content": prompt},
                {"role": "user", "content": task + user_input},
            ],
        )
        reply = completion.choices[0].message["content"]
        bot.reply_to(message, reply)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    bot.polling(non_stop=True)
